package spotifyclient

import (
	"github.com/shared-spotify/logger"
	"github.com/zmb3/spotify"
)

const playlistDescription = "Generated by Shared Spotify"
const playlistPublic = false
const maxTrackPerPlaylistAddCall = 100
const spotifyExternalLinkName = "spotify"

func (user *User) CreatePlaylist(playlistName string, tracks []*spotify.FullTrack) (*string, error) {
	// we create the playlist
	fullPlaylist, err := user.Client.CreatePlaylistForUser(user.Infos.Id, playlistName,
		playlistDescription, playlistPublic)

	if err != nil {
		logger.Logger.Errorf("Failed to created playlist - %v", err)
		return nil, err
	}

	logger.Logger.Infof("Playlist '%s' successfully created for user %s", playlistName, user.GetUserId())

	// we add the tracks
	trackIds := make([]spotify.ID, 0)

	for _, track := range tracks {
		trackIds = append(trackIds, track.ID)
	}

	// Send the track by batch of maxTrackPerPlaylistAddCall, as we are limited ont he number of songs we can
	// add at once
	for i := 0; i < len(trackIds); i += maxTrackPerPlaylistAddCall {
		upperBound := i+maxTrackPerPlaylistAddCall

		if upperBound > len(trackIds) {
			upperBound = len(trackIds)
		}

		_, err := user.Client.AddTracksToPlaylist(fullPlaylist.ID, trackIds[i:upperBound]...)

		if err != nil {
			logger.Logger.Errorf("Failed to add songs to playlist - %v", err)
			return nil, err
		}

		logger.Logger.Infof("Add %d tracks to Playlist '%s' successfully created for user %s",
			upperBound-i, playlistName, user.GetUserId())
	}

	// get the spotify link to the playlist so we return it
	externalLink, ok := fullPlaylist.ExternalURLs[spotifyExternalLinkName]

	if !ok {
		logger.Logger.Warningf("No spotify external link for playlist '%s' for user %s",
			playlistName, user.GetUserId())
		return nil, nil
	}

	return &externalLink, nil
}
